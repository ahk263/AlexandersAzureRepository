{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  
  "parameters": 
  {
    "projectName":
    {
      "type": "string",
      "metadata": {"description": "Specifies a name for generating resource names."}
    },
    
    "location": 
    {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {"description": "Specifies the location for all resources."}
    },

    "StorageAccountName":
    {
        "type": "string",
        "metadata": {"description": "This is where the user needs to name their globally unique storage account"}
    },

    "adminUsername": 
    {
      "type": "string",
      "metadata": {"description": "Specifies a username for the Virtual Machine."}
    },

    "adminPublicKey": 
    {
      "type": "string",
      "metadata": {"description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."}
    },

    "vmSize": 
    {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {"description": "description"}
    },

    "NumberOfVMs":
    {
      "type": "int",
      "defaultValue": 5,
      "metadata": {"description": "The user must how many VM to be created"}
    }

  },

  "variables": 
  {
    "vmName": "[concat(parameters('projectName'), '-vm')]",
    "networkInterfaceName": "[concat(parameters('projectName'), '-nic')]",
    "VNetName": "[concat(parameters('projectName'),'-VNet')]",
    "SubnetName": "[concat(parameters('projectName'),'-SubNet')]"
  },

  "resources": 
  [

    {
      "name": "[variables('VNetName')]",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-04-01",
      "location": "[resourceGroup().location]",
      "properties": 
      {
        "addressSpace": 
        {
          "addressPrefixes":
          [
            "10.0.0.0/16"
          ]
        },
       "subnets": 
       [
        {
          "name": "[variables('SubnetName')]",
          "properties": {"addressPrefix": "10.0.0.0/24"}
        }
       ]
      }
    },

    {
        "name": "[parameters('StorageAccountName')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2023-01-01",
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "properties": {"accessTier": "Cool"},
        "sku": 
        {
            "name": "Standard_LRS",
            "tier": "Standard"
        }
    },

    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-05-01",
      "copy": 
      {
        "name": "NICcopy",
        "count": "[parameters('NumberOfVMs')]"
      },
      "name": "[concat(variables('networkInterfaceName'), copyIndex(1))]",
      "location": "[parameters('location')]",
      "properties":
      {
        "ipConfigurations":
        [
          {
            "name": "ipconfig1",
            "properties": 
            {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": 
              {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VNetName'), variables('SubnetName'))]"
              }
            }
          }
        ]
      }
    },

    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "dependsOn": ["NICCopy"],
      "name": "[concat(variables('vmName'), copyIndex(1))]",
      "copy": 
      {
        "name": "VMcopy",
        "count": "[parameters('NumberOfVMs')]"
      },
      "location": "[parameters('location')]",
      "properties": 
      {
        "hardwareProfile": {"vmSize": "[parameters('vmSize')]"},
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyIndex(1))]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": 
        {
          "imageReference": 
          {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "18_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {"createOption": "fromImage"}
        },
        "networkProfile": 
        {
          "networkInterfaces":
          [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyindex(1)))]"
            }
          ]
        }
      }
    }
  ]
}
